<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IXgAAAAASUVORK5CYII=
</value>
  </data>
</root>