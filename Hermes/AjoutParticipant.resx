<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3dybT9/+AikhOS7q4yF4AAAAAElFTkSuQmCC
</value>
  </data>
</root>